@import url("https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap");

@tailwind base;
@tailwind components;
@tailwind utilities;

* {
  box-sizing: border-box;
}

body {
  overflow-x: hidden !important;
}

button, .btn {
  cursor: pointer;
}

/* src/index.css or src/tailwind.css */
:root {
  --font-size-h1: clamp(2rem, 5vw, 4rem);
  --font-size-h2: clamp(1.5rem, 4vw, 3rem);
  --font-size-h3: clamp(1.125rem, 2.5vw, 2rem);
  --font-size-p: clamp(1rem, 2vw, 1.25rem);
  --font-size-p-custom: clamp(
    1.25rem,
    2.5vw,
    1.5rem
  ); /* Larger paragraph font size */

  /* Color Palette */
  --color-primary: hsla(205, 60%, 35%, 1); 
  --color-secondary: hsla(200, 84%, 76%, 1);
  --color-tertiary: hsla(200, 84%, 86%, 1); 

  --color-accent: hsla(205, 86%, 74%, 1); 
  --color-background-light: hsla(205, 100%, 92%, 1); 
  --color-black: #000000;
  --color-white: #ffffff;
  --gray-accent: #aaa;
  --subtle-gray-accent: #ddd;
  --super-light-gray: #eee;
  --light-turquoise: #3d7393;

  /* Line Heights */
  --line-height-h1: 1.2; 
  --line-height-h2: 1.3;
  --line-height-h3: 1.3;
  --line-height-p: 1.5;
  --line-height-p-custom: 1.5;
}

/* Apply Inter font and weights globally */
body {
  font-family: "Inter", sans-serif;
}

h1 {
  font-size: var(--font-size-h1);
  font-weight: 700; /* Bold for h1 */
}

h2 {
  font-size: var(--font-size-h2);
  font-weight: 600; /* Semi-bold for h2 */
}

h3 {
  font-size: var(--font-size-h3);
  font-weight: 700; 
}

p {
  font-size: var(--font-size-p);
  font-weight: 400; 
}

p.custom-paragraph {
  font-size: var(
    --font-size-p-custom
  ); 
}

@keyframes hero-gradient-animation {
  0% {
    --x-0: 0%;
    --y-0: 90%;
    --c-0: hsla(200, 84%, 76%, 1);
    --s-start-0: 3%;
    --s-end-0: 79%;
    --y-1: 35%;
    --x-1: 98%;
    --s-start-1: 3%;
    --s-end-1: 79%;
    --c-1: hsla(205, 86%, 74%, 1);
  }

  100% {
    --x-0: 24%;
    --y-0: 16%;
    --c-0: hsla(205, 100%, 92%, 1);
    --s-start-0: 4%;
    --s-end-0: 67%;
    --y-1: 100%;
    --x-1: 62%;
    --s-start-1: 4%;
    --s-end-1: 67%;
    --c-1: hsla(200, 84%, 76%, 1);
  }
}

@property --x-0 {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --y-0 {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 90%;
}

@property --c-0 {
  syntax: "<color>";
  inherits: false;
  initial-value: hsla(200, 84%, 76%, 1);
}

@property --s-start-0 {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 3%;
}

@property --s-end-0 {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 79%;
}

@property --y-1 {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 35%;
}

@property --x-1 {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 98%;
}

@property --s-start-1 {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 3%;
}

@property --s-end-1 {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 79%;
}

@property --c-1 {
  syntax: "<color>";
  inherits: false;
  initial-value: hsla(205, 86%, 74%, 1);
}

/* Apply the gradient with the animation */
.light-mode-gradient {
  --x-0: 0%;
  --y-0: 90%;
  --c-0: hsla(200, 84%, 76%, 1);
  --y-1: 35%;
  --x-1: 98%;
  --c-1: hsla(205, 86%, 74%, 1);
  background-color: hsla(255, 0%, 100%, 1);
  background-image: radial-gradient(
      circle at var(--x-0) var(--y-0),
      var(--c-0) var(--s-start-0),
      transparent var(--s-end-0)
    ),
    radial-gradient(
      circle at var(--x-1) var(--y-1),
      var(--c-1) var(--s-start-1),
      transparent var(--s-end-1)
    );
  animation: hero-gradient-animation 10s linear infinite alternate;
  background-blend-mode: normal, normal;
  height: 100vh;
}

@keyframes dark-mode-gradient-animation {
  0% {
    --x-0: 0%;
    --y-0: 90%;
    --c-0: hsla(200, 70%, 30%, 1);
    --s-start-0: 10%;
    --s-end-0: 60%;
    --y-1: 40%;
    --x-1: 85%;
    --s-start-1: 10%;
    --s-end-1: 60%;
    --c-1: hsla(205, 60%, 35%, 1);
  }

  100% {
    --x-0: 20%;
    --y-0: 15%;
    --c-0: hsla(205, 75%, 45%, 1);
    --s-start-0: 15%;
    --s-end-0: 75%;
    --y-1: 80%;
    --x-1: 70%;
    --s-start-1: 15%;
    --s-end-1: 75%;
    --c-1: hsla(200, 55%, 40%, 1);
  }
}

@property --x-0 {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 0%;
}

@property --y-0 {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 90%;
}

@property --c-0 {
  syntax: "<color>";
  inherits: false;
  initial-value: hsla(200, 70%, 30%, 1);
}

@property --s-start-0 {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 10%;
}

@property --s-end-0 {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 60%;
}

@property --y-1 {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 40%;
}

@property --x-1 {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 85%;
}

@property --s-start-1 {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 10%;
}

@property --s-end-1 {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 60%;
}

@property --c-1 {
  syntax: "<color>";
  inherits: false;
  initial-value: hsla(205, 60%, 35%, 1);
}

/* Apply the adjusted dark gradient with higher contrast */
.dark-mode-gradient {
  --x-0: 0%;
  --y-0: 90%;
  --c-0: hsla(200, 70%, 30%, 1);
  --y-1: 40%;
  --x-1: 85%;
  --c-1: hsla(205, 60%, 35%, 1);
  background-color: hsla(0, 0%, 10%, 1);
  background-image: radial-gradient(
      circle at var(--x-0) var(--y-0),
      var(--c-0) var(--s-start-0),
      transparent var(--s-end-0)
    ),
    radial-gradient(
      circle at var(--x-1) var(--y-1),
      var(--c-1) var(--s-start-1),
      transparent var(--s-end-1)
    );
  animation: dark-mode-gradient-animation 10s linear infinite alternate;
  background-blend-mode: normal, normal;
  height: 100vh;
}

/* Cursor styling */
.cursor {
  display: inline-block;
  width: 2px;
  height: 1em;
  margin-left: 2px;
  background-color: currentColor;
  animation: blink 0.7s step-end infinite;
  vertical-align: middle;
}

/* Blinking effect */
@keyframes blink {
  50% {
    opacity: 0;
  }
}

/* Dark mode cursor color override */
.dark-mode-gradient .cursor {
  background-color: #fff;
}

/* Light mode cursor color override */
.light-mode-gradient .cursor {
  background-color: #000;
}

/* Light mode text color */
.light-typed {
  color: hsla(205, 60%, 35%, 1);
}

/* Dark mode text color */
.dark-mode-gradient .text-h1 .dark-typed {
  color: var(--color-secondary); /* Light gray */
  transition: color 300ms ease; /* Optional: add smooth transition */
}
/* Optional: Add smooth transition */
.text-h1 span {
  transition: color 300ms ease;
}

/* Chat Window Animations */
.chatWindow {
  transform-origin: bottom right;
  animation-fill-mode: forwards;
}

.chatWindow.opening {
  animation: scaleIn 0.3s ease-out;
}

.chatWindow.closing {
  animation: scaleOut 0.3s ease-in;
}

@keyframes scaleIn {
  0% {
    opacity: 0;
    transform: scale(0.5) translateY(20px);
  }
  100% {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

@keyframes scaleOut {
  0% {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
  100% {
    opacity: 0;
    transform: scale(0.5) translateY(20px);
  }
}

/* Reduce line height for mobile screens */
@media (max-width: 767px) {
  h1 {
    line-height: 1.1; /* Tighter line height for h1 */
  }

  h2 {
    line-height: 1.2; /* Tighter line height for h2 */
  }

  h3 {
    line-height: 1.25; /* Tighter line height for h3 */
  }

  p {
    line-height: 1.5; /* Tighter line height for paragraphs */
  }

  p.custom-paragraph {
    line-height: 1.4; /* Adjust for custom paragraphs */
  }
}
.chatBody {
  overflow-anchor: none; /* Disables browser auto-scroll */
}

/* Add this to your CSS or Tailwind custom styles */
@keyframes revealText {
  0% {
    width: 0;
  }
  100% {
    width: 100%;
  }
}

.reveal-text {
  display: inline-block;
  overflow: hidden;
  white-space: nowrap;
  width: 0; /* Starts hidden */
  animation: revealText 2s forwards; /* Adjust timing as needed */
}

/* Add these to your CSS file */
.chat-transition-enter {
  opacity: 0;
  transform: translateY(20px);
}

.chat-transition-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 300ms, transform 300ms;
}

.chat-transition-exit {
  opacity: 1;
  transform: translateY(0);
}

.chat-transition-exit-active {
  opacity: 0;
  transform: translateY(-20px);
  transition: opacity 300ms, transform 300ms;
}

@media (max-width: 1024px) {
  .chatBody,
  .chatRegisterForm {
    background-color: var(--color-primary) !important ;
  }
}
